name: Build OrionTV ARMv7

on:
  workflow_dispatch:   # 手动触发
  push:
    branches: [ main ] # 可以改成自己的分支

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 拉取代码
      - uses: actions/checkout@v3

      # 调试：列出仓库结构，确认 Cargo.toml 位置
      - name: Debug list files
        run: |
          pwd
          ls -R

      # 安装 armv7 交叉编译工具
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf pkg-config

      # 安装 Rust 并添加 armv7 目标
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: armv7-unknown-linux-gnueabihf

      # 编译 armv7a 版本
      - name: Build for ARMv7
        run: |
          # 查找 Cargo.toml
          CARGO_DIR=$(find . -name Cargo.toml -exec dirname {} \;)
          echo "Found Cargo.toml in $CARGO_DIR"
          mkdir -p $CARGO_DIR/.cargo
          echo '[target.armv7-unknown-linux-gnueabihf]' > $CARGO_DIR/.cargo/config.toml
          echo 'linker = "arm-linux-gnueabihf-gcc"' >> $CARGO_DIR/.cargo/config.toml
          cd $CARGO_DIR
          cargo build --release --target=armv7-unknown-linux-gnueabihf

      # 上传编译好的二进制文件
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: oriontv-armv7
          path: $CARGO_DIR/target/armv7-unknown-linux-gnueabihf/release/oriontv
